#!/usr/bin/env python3

# This file is Wonderbar - a hackable i3status replacement for i3 window manager
# 
# Copyright (C) 2019 Chris Narkiewicz <hello@ezaquarii.com>
#
# Foobar is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# Foobar is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with Wonderbar.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import asyncio

from wonderbar import Config
from wonderbar import Wonderbar
from wonderbar import VERSION, import_plugin


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("--i3status-config", metavar="CONFIG_FILE", type=str, help="Config file for i3status")
    parser.add_argument("-v", "--version", action="store_true", help="Show version")
    parser.add_argument("-c", "--config", type=str, help="i3wonderbar config file.")
    parser.add_argument("-p", "--print-config",
                        action="store_true",
                        help="Print config. You can use it as a base for your custom modifications.")
    options = parser.parse_args()

    if options.version:
        print(VERSION)
        exit(0)

    config = Config()

    if options.config:
        config.load(options.config)

    if options.print_config:
        print(config)
        exit(0)

    wbar = Wonderbar(interval=5)
    for plugin_name in config.plugins:
        plugin = import_plugin(plugin_name)
        if plugin is None:
            continue
        elif plugin_name == 'i3status':  # yuck!
            wbar.add_plugin(plugin(config=options.i3status_config))
        else:
            wbar.add_plugin(plugin())

    loop = asyncio.get_event_loop()
    asyncio.ensure_future(wbar.run())
    loop.run_forever()
